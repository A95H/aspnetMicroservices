version: '3.4'

services:
  #Configre catalogdb  
  catalogdb:
    container_name: catalogdb #mongodb container name
    restart: always
    ports:
      - "27017:27017" #mongo port on host machine
    volumes:
      - mongo_data:/data/db # the path is data/db from official mongo image documentation 

  #Configre basketdb   
  basketdb:
    container_name: basketdb #redis container name
    restart: always
    ports:
      - "6379:6379" #redis port on host machine

  #Configre discountdb using PostgreSql
  discountdb:
    container_name: discountdb
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin1234
      - POSTGRES_DB=discountdb
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/

#Configre orderdb using Microsoft Sql Server
  orderdb:
    container_name: orderdb
    environment: #set environment flags as MSSql Configuration in https://hub.docker.com/_/microsoft-mssql-server
        SA_PASSWORD: "admin1234"
        ACCEPT_EULA: "Y"
    restart: always
    ports:
        - "1433:1433"

#Configure rabbitmq
  rabbitmq:
    container_name: rabbitmq
    restart: always
    ports:
        - "5672:5672"
        - "15672:15672"

  #Configre PGAdmin #pgadmin is management app for postgresql
  pgadmin:
    container_name: pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=user@admin.com
      - PGADMIN_DEFAULT_PASSWORD=admin1234
    restart: always
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/root/.pgadmin 
   

  catalog.api:
    container_name: catalog.api # appName
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "DatabaseSettings:ConnectionString=mongodb://catalogdb:27017" #override .net appsettings file 
    depends_on:
      - catalogdb # make the app depend on catalogdb 
    ports:
      - "8000:80" # forward to port 8000 in local host
 
# use the next command to compose and run/create docker image after config your yaml      
# docker-compose -f .\docker-compose.yml -f .\docker-compose.override.yml up -d

# rebuild all docker images by this command 
# docker-compose -f .\docker-compose.yml -f .\docker-compose.override.yml up --build

  basket.api:
    container_name: basket.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "CacheSettings:ConnectionString=basketdb:6379"   #override .net appsettings file to add connection for redis 
      - "GrpcSettings:DiscountUrl=discount.grpc"
    depends_on:
      - basketdb
    ports:
      - "8001:80"


  discount.api:
    container_name: discount.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      #NOTE : On Connection String in Docker Container, the server should be container name of the database insetead of localhost
      - "DatabaseSettings:ConnectionString=server=discountdb;Port=5432;Database=DiscountDb;User Id=admin;Password=admin1234;"
    depends_on:
      - discountdb
    ports:
      - "8002:80"


  discount.grpc:
    container_name: discount.grpc

    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "DatabaseSettings:ConnectionString=server=discountdb;Port=5432;Database=DiscountDb;User Id=admin;Password=admin1234;"
    depends_on:
      - discountdb
    ports:
      - "80"


  order.api:
    container_name: order.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "ConnectionStrings:OrderingConnectionString=Server=orderdb;Database=OrderDb;User Id=sa;Password=admin1234;"
    depends_on:
        - orderdb
    ports:
      - "8004:80"
      